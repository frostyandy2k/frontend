{"version":3,"sources":["webpack:///./src/feature/fc/fcdemo/fctemplate/fctempatedetail/fctemplatedetail.component.html","webpack:///./src/feature/fc/fcdemo/fctemplate/fctemplateform/fctemplateform.component.html","webpack:///./src/feature/fc/fcdemo/fctemplate/fctemplatelist/fctemplatelist.component.html","webpack:///./src/feature/fc/fcdemo/fctemplate/fctemplatetreelist/fctemplatetreelist.component.html","webpack:///./src/feature/fc/fcdemo/fctemplate/sensorRegistry/sensorregistry.dialog.html","webpack:///./src/feature/fc/fcdemo/fctemplate/fctempatedetail/fctemplatedetail.component.ts","webpack:///./src/feature/fc/fcdemo/fctemplate/fctemplate.module.ts","webpack:///./src/feature/fc/fcdemo/fctemplate/fctemplate.route.ts","webpack:///./src/feature/fc/fcdemo/fctemplate/fctemplateform/fctemplateform.component.ts","webpack:///./src/feature/fc/fcdemo/fctemplate/fctemplatelist/fctemplatelist.component.ts","webpack:///./src/feature/fc/fcdemo/fctemplate/fctemplatetreelist/fctemplatetreelist.component.ts","webpack:///./src/feature/fc/fcdemo/fctemplate/sensorRegistry/sensorregistry.dialog.ts"],"names":[],"mappings":"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","file":"fctemplate-fctemplate-module-es5.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"fc-templateform\\\">\\n  <div class=\\\"fc-toolbar fc-toolbarform\\\">\\n    <button nz-button nzType=\\\"default\\\">返回</button>\\n    <button nz-button nzType=\\\"primary\\\">保存</button>\\n  </div>\\n  <div class=\\\"fc-templateform-content\\\">\\n    <div nz-row>\\n      <div nz-col nzSpan=\\\"12\\\">\\n        <nz-card [nzBordered]=\\\"false\\\" nzTitle=\\\"基本信息\\\">\\n          <form nz-form [formGroup]=\\\"validateForm\\\">\\n            <nz-form-item>\\n              <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"email\\\">E-mail</nz-form-label>\\n              <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzErrorTip=\\\"The input is not valid E-mail!\\\">\\n                <input nz-input formControlName=\\\"email\\\" id=\\\"email\\\" />\\n              </nz-form-control>\\n            </nz-form-item>\\n            <nz-form-item>\\n              <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"password\\\" nzRequired>Password</nz-form-label>\\n              <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzErrorTip=\\\"Please input your password!\\\">\\n                <input nz-input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\"\\n                  (ngModelChange)=\\\"updateConfirmValidator()\\\" />\\n              </nz-form-control>\\n            </nz-form-item>\\n            <nz-form-item>\\n              <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"checkPassword\\\" nzRequired>Confirm Password</nz-form-label>\\n              <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" [nzErrorTip]=\\\"errorTpl\\\">\\n                <input nz-input type=\\\"password\\\" formControlName=\\\"checkPassword\\\" id=\\\"checkPassword\\\" />\\n                <ng-template #errorTpl let-control>\\n                  <ng-container *ngIf=\\\"control.hasError('required')\\\">\\n                    Please confirm your password!\\n                  </ng-container>\\n                  <ng-container *ngIf=\\\"control.hasError('confirm')\\\">\\n                    Two passwords that you enter is inconsistent!\\n                  </ng-container>\\n                </ng-template>\\n              </nz-form-control>\\n            </nz-form-item>\\n            <nz-form-item>\\n              <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"nickname\\\" nzRequired>\\n                <span>\\n                  Nickname\\n                  <i nz-icon nz-tooltip nzTitle=\\\"What do you want other to call you\\\" nzType=\\\"question-circle\\\"\\n                    nzTheme=\\\"outline\\\"></i>\\n                </span>\\n              </nz-form-label>\\n              <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzErrorTip=\\\"Please input your nickname!\\\">\\n                <input nz-input id=\\\"nickname\\\" formControlName=\\\"nickname\\\" />\\n              </nz-form-control>\\n            </nz-form-item>\\n            <nz-form-item>\\n              <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"phoneNumber\\\" nzRequired>Phone Number</nz-form-label>\\n              <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" [nzValidateStatus]=\\\"validateForm.controls['phoneNumber']\\\"\\n                nzErrorTip=\\\"Please input your phone number!\\\">\\n                <nz-input-group [nzAddOnBefore]=\\\"addOnBeforeTemplate\\\">\\n                  <ng-template #addOnBeforeTemplate>\\n                    <nz-select formControlName=\\\"phoneNumberPrefix\\\" class=\\\"phone-select\\\">\\n                      <nz-option nzLabel=\\\"+86\\\" nzValue=\\\"+86\\\"></nz-option>\\n                      <nz-option nzLabel=\\\"+87\\\" nzValue=\\\"+87\\\"></nz-option>\\n                    </nz-select>\\n                  </ng-template>\\n                  <input formControlName=\\\"phoneNumber\\\" id=\\\"'phoneNumber'\\\" nz-input />\\n                </nz-input-group>\\n              </nz-form-control>\\n            </nz-form-item>\\n            <nz-form-item>\\n              <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"website\\\" nzRequired>Website</nz-form-label>\\n              <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzErrorTip=\\\"Please input website!\\\">\\n                <input nz-input id=\\\"website\\\" formControlName=\\\"website\\\" placeholder=\\\"website\\\" />\\n              </nz-form-control>\\n            </nz-form-item>\\n            <nz-form-item>\\n              <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"captcha\\\" nzRequired>Captcha</nz-form-label>\\n            </nz-form-item>\\n          </form>\\n        </nz-card>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n<div class=\\\"fc-templatelist\\\">\\n  <div class=\\\"fc-toolbar\\\">\\n    <button nz-button nzType=\\\"primary\\\" (click)=\\\"sensorRegistry()\\\">传感器注册</button>\\n    <button nz-button nzType=\\\"primary\\\">查看</button>\\n  </div>\\n  <form class=\\\"fc-searchbar\\\">\\n    <div nz-row [nzGutter]=\\\"30\\\">\\n      <div nz-col [nzSpan]=\\\"6\\\" class=\\\"fc-searchbar-item\\\">\\n        <label for=\\\"name\\\" class=\\\"fc-searchbar-label\\\">传感器名称</label>\\n        <input class=\\\"fc-searchbar-control\\\" nz-input placeholder=\\\"请输入传感器名称\\\" [(ngModel)]=\\\"searchObj.name\\\" name=\\\"name\\\" />\\n      </div>\\n\\n      <div nz-col [nzSpan]=\\\"6\\\" class=\\\"fc-searchbar-btn\\\">\\n        <button nz-button nzType=\\\"primary\\\">查询</button>\\n      </div>\\n    </div>\\n  </form>\\n  <div class=\\\"fc-templatelist-content\\\">\\n    <nz-table #headerTable [nzData]=\\\"listOfData\\\" [nzPageSize]=\\\"50\\\" [nzScroll]=\\\"{ y: '500px' }\\\" [nzBordered]=\\\"true\\\">\\n      <thead>\\n        <tr>\\n          <th nzWidth=\\\"150px\\\">传感器名称</th>\\n          <th nzWidth=\\\"150px\\\">图片</th>\\n          <th nzWidth=\\\"150px\\\">类别</th>\\n          <th>描述</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let data of headerTable.data\\\">\\n          <td>{{ data.name }}</td>\\n          <td>{{ data.img }}</td>\\n          <td>{{ data.type }}</td>\\n          <td>{{ data.description }}</td>\\n        </tr>\\n      </tbody>\\n    </nz-table>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","module.exports = \"<div class=\\\"registrysensor-dialog\\\">\\n  <form nz-form [formGroup]=\\\"validateForm\\\">\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzRequired nzFor=\\\"tableName\\\">表名</nz-form-label>\\n      <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzErrorTip=\\\"表名不能为空!\\\">\\n        <input nz-input formControlName=\\\"tableName\\\" id=\\\"tableName\\\" />\\n      </nz-form-control>\\n    </nz-form-item>\\n\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"sensorName\\\" nzRequired>传感器名字</nz-form-label>\\n      <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzErrorTip=\\\"传感器名字不能为空!\\\">\\n        <input nz-input  id=\\\"sensorName\\\" formControlName=\\\"sensorName\\\" />\\n      </nz-form-control>\\n    </nz-form-item>\\n\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"function\\\" nzRequired>传感器功能</nz-form-label>\\n      <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzErrorTip=\\\"传感器功能不能为空!\\\">\\n        <input nz-input id=\\\"function\\\" formControlName=\\\"function\\\" />\\n      </nz-form-control>\\n    </nz-form-item>\\n\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"type\\\" nzRequired>类型</nz-form-label>\\n      <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" nzErrorTip=\\\"类型不能为空!\\\">\\n        <input nz-input id=\\\"type\\\" formControlName=\\\"type\\\" />\\n      </nz-form-control>\\n    </nz-form-item>\\n\\n    <nz-form-item>\\n      <nz-form-label [nzSm]=\\\"6\\\" [nzXs]=\\\"24\\\" nzFor=\\\"description\\\" nzRequired>描述</nz-form-label>\\n      <nz-form-control [nzSm]=\\\"14\\\" [nzXs]=\\\"24\\\" >\\n        <input nz-input  id=\\\"description\\\" formControlName=\\\"description\\\" />\\n      </nz-form-control>\\n    </nz-form-item>\\n  </form>\\n  <div class=\\\"edituser-dialog-footer\\\">\\n    <button nz-button nzSize=\\\"large\\\" style=\\\"margin-right: 10px;\\\" [nzType]=\\\"'default'\\\"\\n      (click)=\\\"handleCancel()\\\">取消</button>\\n    <button nz-button nzSize=\\\"large\\\" [nzType]=\\\"'primary'\\\" (click)=\\\"handleOk()\\\">确认修改</button>\\n  </div>\\n</div>\\n\"","\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'fc-templatedetail',\n    templateUrl: './fctemplatedetail.component.html',\n    styles: [\n        `\n     \n    `\n    ]\n})\nexport class FctemplatedetailComponent {\n    constructor(public router: Router, public activedRoute: ActivatedRoute) { }\n}\n","/*\n * @Author: honghong\n * @LastEditors: honghong\n * @Description: 示例模块\n * @email: 3300536651@qq.com\n * @Date: 2019-04-16 16:02:48\n * @LastEditTime: 2019-10-16 15:53:24\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FccomponentModule } from 'src/fccomponents/fccomponent.module';\nimport { SharedModule } from 'src/shared';\nimport { Routers } from './fctemplate.route';\nimport { FctemplatedetailComponent } from './fctempatedetail/fctemplatedetail.component';\nimport { FctemplateformComponent } from './fctemplateform/fctemplateform.component';\nimport { FctemplatelistComponent } from './fctemplatelist/fctemplatelist.component';\nimport { FctemplatetreelistComponent } from './fctemplatetreelist/fctemplatetreelist.component';\nimport { FcRegistrySensorComponent } from './sensorRegistry/sensorregistry.dialog';\nimport { SyseditpasswordComponent } from '../../../../app/components/dialog/syseditpassword.dialog';\n@NgModule({\n  entryComponents: [FcRegistrySensorComponent],\n\n  imports: [\n    SharedModule,\n    RouterModule.forChild(Routers),\n    FccomponentModule\n  ],\n  declarations: [\n    FctemplatedetailComponent,\n    FctemplateformComponent,\n    FctemplatelistComponent,\n    FctemplatetreelistComponent,\n    FcRegistrySensorComponent,\n  ],\n  providers: []\n})\nexport class FctemplateModule { }\n","import { Routes } from '@angular/router';\nimport { FctemplatelistComponent } from './fctemplatelist/fctemplatelist.component';\nimport { FctemplateformComponent } from './fctemplateform/fctemplateform.component';\nimport { FctemplatedetailComponent } from './fctempatedetail/fctemplatedetail.component';\nimport { FctemplatetreelistComponent } from './fctemplatetreelist/fctemplatetreelist.component';\n\n\nexport const Routers: Routes = [\n  {\n    path: 'fctemplatelist', // 列表\n    component: FctemplatelistComponent\n  },\n  {\n    path: 'fctemplateform', // 表单\n    component: FctemplateformComponent\n  },\n  {\n    path: 'fctemplatedetail', // 详情\n    component: FctemplatedetailComponent\n  },\n  {\n    path: 'fctemplatetreelist', // 左树右列表\n    component: FctemplatetreelistComponent\n  },\n];\n","\nimport { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { environment } from 'src/environments/environment.dev';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'fc-templateform',\n    templateUrl: './fctemplateform.component.html',\n    styles: [\n        `\n    .fc-templateform {\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    .fc-templateform-content {\n        height: calc(100% - 38px);\n        overflow: auto;\n        padding: 10px;\n    }\n    .fc-toolbarform {\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        z-index: 100;\n        text-align: center;\n        background-color: #e6f7ff;\n    }\n     \n    `\n    ]\n})\nexport class FctemplateformComponent implements OnInit {\n    validateForm: FormGroup;\n    constructor(public router: Router, public activedRoute: ActivatedRoute,\n        private fb: FormBuilder) { }\n    ngOnInit(): void {\n        this.validateForm = this.fb.group({\n            email: [null, [Validators.email, Validators.required]],\n            password: [null, [Validators.required]],\n            checkPassword: [null, [Validators.required, this.confirmationValidator]],\n            nickname: [null, [Validators.required]],\n            phoneNumberPrefix: ['+86'],\n            phoneNumber: [null, [Validators.required]],\n            website: [null, [Validators.required]],\n            captcha: [null, [Validators.required]],\n            agree: [false]\n        });\n    }\n    updateConfirmValidator(): void {\n        /** wait for refresh value */\n        Promise.resolve().then(() => this.validateForm.controls.checkPassword.updateValueAndValidity());\n    }\n\n    confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\n        if (!control.value) {\n            return { required: true };\n        } else if (control.value !== this.validateForm.controls.password.value) {\n            return { confirm: true, error: true };\n        }\n        return {};\n    };\n}\n","\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { SyseditpasswordComponent } from '../../../../../app/components/dialog/syseditpassword.dialog';\nimport { NzModalService } from 'ng-zorro-antd';\nimport { FcRegistrySensorComponent } from '../sensorRegistry/sensorregistry.dialog';\n\n@Component({\n    selector: 'fc-templatelist',\n    templateUrl: './fctemplatelist.component.html',\n    styles: [\n        `\n        .fc-searchbar-item {\n            display: flex;\n            flex-direction: row;\n        }\n        .fc-searchbar-label {\n            width: 25%;\n            text-align: right;\n            padding-right: 10px;\n            line-height: 32px;\n        }\n        .fc-searchbar-control {\n            width: 75%;\n        }\n    `\n    ]\n})\nexport class FctemplatelistComponent implements OnInit {\n    listOfData: any[] = [];\n    validateForm: FormGroup;\n    controlArray: any[] = [];\n    isCollapse = true;\n    searchObj = {\n      name: '',\n      img: '',\n      type: '',\n      description:''\n    }\n    constructor(public router: Router, public activedRoute: ActivatedRoute, public modalService: NzModalService,\n    ) { }\n    //数据绑定循环添加测试数据\n    ngOnInit(): void {\n        for (let i = 0; i < 100; i++) {\n            this.listOfData.push({\n                name: `Edward King ${i}`,\n                img: 32,\n                type: `London, Park Lane no. ${i}`,\n                description:'123123'\n            });\n        }\n    }\n\n  sensorRegistry() {\n    const modal = this.modalService.create({\n      nzTitle: '注册传感器',\n      nzContent: FcRegistrySensorComponent,\n      nzWrapClassName: 'registrysensor-dialog-wrap',\n      nzComponentParams: {\n        tableName: 'tableName',\n        sensorName: 'sensorName',\n        function: 'function',\n        type: 'type',\n        description: 'description',\n      },\n      nzFooter: null\n    });\n    modal.afterOpen.subscribe(() => console.log('[afterOpen] emitted!'));\n    modal.afterClose.subscribe(result => console.log('[afterClose] The result is:', result));\n    setTimeout(() => {\n      const instance = modal.getContentComponent();\n      instance.function = 'passWord is changed';\n    }, 2000);\n  }\n}\n","\n\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'fc-temp;atetreelist',\n    templateUrl: './fctemplatetreelist.component.html',\n    styles: [\n        `\n     \n    `\n    ]\n})\nexport class FctemplatetreelistComponent {\n    constructor(public router: Router, public activedRoute: ActivatedRoute) { }\n}\n","\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { NzModalRef } from 'ng-zorro-antd';\n@Component({\n  selector: 'sys-sensorregistry',\n  templateUrl: './sensorregistry.dialog.html',\n  styles: [`\n  ::ng-deep .registrysensor-dialog-wrap .ant-modal-body{\n    padding: 16px 0 0;\n  }\n  ::ng-deep .registrysensor-dialog .edituser-dialog-footer {\n    border-top: 1px solid #e9e9e9;\n    padding: 10px 16px 10px 10px;\n    text-align: right;\n    border-radius: 0 0 4px 4px;\n  }\n  `]\n})\nexport class FcRegistrySensorComponent implements OnInit {\n  //\n  validateForm: FormGroup;\n  @Input()\n  tableName: string;\n  @Input()\n  sensorName: string;\n  @Input()\n  function: string;\n  @Input()\n  type: string;\n  @Input()\n  description: string;\n  // 用户信息\n  userInfo: any;\n\n  constructor(private fb: FormBuilder, private subject: NzModalRef,\n  ) { }\n  ngOnInit(): void {\n    // 表单验证\n    this.validateForm = this.fb.group({\n      tableName :  [null, [Validators.required]],\n      sensorName:  [null, [Validators.required]],\n      function:  [null, [Validators.required]],\n      type:  [null, [Validators.required]],\n    });\n  }\n  getFormControl(name) {\n    return this.validateForm.controls[name];\n  }\n  handleOk() {\n    for (const i in this.validateForm.controls) {\n      this.validateForm.controls[i].markAsDirty();\n    }\n    //提交请求\n  }\n  handleCancel() {\n    this.subject.destroy('onCancel');\n  }\n\n}\n"],"sourceRoot":""}